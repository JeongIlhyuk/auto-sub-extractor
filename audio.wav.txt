 여러분, 지난 시간에 이어서 포인트 프로세싱에 대해서 계속 수업을 진행하도록 하겠습니다.
 이렇게 휴 공간과 인제 세트위션 공간을 같이 고려를 한 택조 공간에서
 특정, 객제의 정보를 모델링하는 이그젠프리래에서 설명하도록 하겠습니다.
 RGB 컬러스페이스에서 스킨 컬러를 모델링하는 것인데요.
 여기에서는 우리가 RGB를 그대로 쓴 게 아니라 밑에 설명이 되어있는데
 'Normalized Red'와 'Normalized Green'에서 모델링을 한 겁니다.
 'Normalized Red'와 'Normalized Green'라는 것은 원래 레드 그린 블루가 있으면
 이 값들이 각각 브랜드인데, 여기에서 정교와 했다는 것은
 각각의 레드와 그레이를 어떤 값을 곱한 거죠.
 여기 어떤 값을 곱한 건데, 여기에 곱해지는 값이 뭐냐면 밝기 값이 됩니다.
 인템스팀에서 정교한다는 거죠.
 우리가 뒤에 'HSI' 컬러스페이스를 얘기를 하면 다시 얘기를 하겠지만
 인템스팀은 3분의 'R+G+B'가 됩니다.
 RGB의 평균 값이 되게 되죠.
 그러면 'Normalized' 'R' 'Normalized Green'라고 하는 것은
 이거를 'I' 분의 원래 레드.
 'I' 분의 원래 그린이 되겠죠.
 그래서 펴 서 생각을 하면
 'I+G+B' 세계의 채널 데뷔 레드일까?
 그리고 역시 그림도 세계의 채널 레비 그린의 값의 크기를 보는 것이기 때문에
 'Normalized Red' 'Normalized Green'라고 얘기를 합니다.
 그래서 이렇게 값을 하게 되면
 값의 범위가 항상 어떻게 될까요?
 그렇죠.
 이거 대비 이거니까 항상 값이 0과 1 사이가 되게 됩니다.
 그래서 정교와 0과 1 사이에서 정교와가 되기 때문에
 'Normalized Red'와 'Normalized Green'의 공간에서는
 축에 최대 값이 각각 1이 되게 되죠.
 그래서 이렇게 이제
 컬러 스페이스의 두 축을 정의를 하고요.
 정의를 하고 나서
 우리가 이제 사람의 얼굴이 이렇게 있는 영상이 있다고 했을 때
 피부톤에 해당하는 것과 피부톤에 해당하지 않는 것.
 그래서 가지고 이제 각각 이 공간상에 각각의 점을 이렇게
 폴로팅 떨어뜨려 봤습니다.
 그래서 떨어뜨려 봤더니
 지금 여기에 적혀 있듯이
 퍼플리전이 스킨컬라
 아,로 사람들의 다양한 인종에 사람들로부터 추출된
 스킨컬라들을 이 NLG 공간에서 떨어뜨린 것이고요.
 블루하고 이제 블루 같은 블라구 옐로우 같은 경우에는
 그 스킨컬라인데 좀 어둡게 보인다거나
 또는 턱수영같이 다른 색이 섞인 부분을 나타내는 것이고
 지금 이제 완전히 레드 부분은
 스킨컬라가 아닌 것 아닌 점들을 나타내고 있습니다.
 자, 그렇게 해서 뿌렸을 때 지금 여러분들이 보이듯이
 스킨컬라가 이렇게 한 곳에 이렇게 잘 붙어져 있는 것을 알 수가 있어요.
 그리고 이제 스킨컬라를 포함하고 있지만
 다소 어두웠던 그림자가 들어갔거나
 턱수영, 색이 좀 탁해진 부분이 여기에 놓여 있고
 그리고 스킨컬라가 아닌 부분은 훨씬 더 방대한 영역에 이렇게 퍼트려져 있죠.
 그래서 두 개의 NLG 컬러 스페이스에서
 우리가 스킨컬라가 이렇게 특징적으로 특정품포 공간에서 모델링이 된다는 것을 알 수가 있습니다.
 사실은 이건 이제 떨어뜨려보면 이렇게 3차원에서 얻어지게 되겠죠.
 여기가 NL, NG 그리고 역할에서 각각의 스킨컬라가 이렇게 쭉 이렇게 어떤 분포도로 나타나는 걸
 신도 잘 알 수 있게 되는데요.
 자, 그렇게 해서 지금 이 모델을 우리가 잘 갖고 있으면
 나중에 입력 영상이 들어오게 되면
 스킨컬라에 해당하는 부분은 일로 표현을 하고
 그리고 스킨컬라가 아닌 부분은 영으로 포기연을 하게 되면 어떤 결과가 얻어줄까요?
 맞아요.
 연가 일로 구성되어 있는 바이널이 이미지가 얻어지게 되고
 그 결과가 일로 마킹된 부분이 스킨컬라다.
 이렇게 해서 잘 떼어낼 수 있겠죠.
 그래서 제가 이제 수업 오리인테이션 1주차에 이제 여러분들이 수행할 수 있는 프로젝트 중에 이제 제스처를 가지고
 인터뷰가 인터페이스로 활용하는 것에서 사람의 얼굴과 양손을 스킨컬라를 이용하면 되어낼 수 있다라고 설명을 했는데
 지금 이 슬라이드가 어떻게 스킨컬라를 정해하는지 잘 설명을 하여 주고 있습니다.
 그래서 방금 얘기했던 것을 실제 비디오 프림에서 영상을 얼굴을 검출하는데
 활용한 예제를 보여주겠습니다.
 왼쪽이 이제 계속해서 들어오는 비디오 데타 이미지 스트리밍 실시가 스트리밍을 받아서
 사람의 얼굴을 검출하고 표정을 해석한다는가 그리고 이게 진짜 우리가 뭐 보완 문제로 권한이 있는 사람인지 이런 것을 구글한다고 할 때 먼저 얼굴 영역을 찾아 내야 되겠죠.
 자 그러면 여기에서 지금 앞에서 봤던 노말라이즈드 알지상에서의 컬러 스킨컬러의 분포를 이용해서 영상의 색깔을 분리를 한 겁니다.
 앞에서 노란색이 그렇죠? 앞에서 우리가 봤을 수 있어요.
 그래서 노란색이 좀 원래는 퍼플, 퍼플이 스킨컬러의 대응을 하고
 그리고 낼로 하고 그린이 좀 다크 스킨컬러의 대응을 하고
 이제 그 외에 세근 다 이제 영 스킨컬러가 아닌 거는 블랙으로 지금 처리를 하는 겁니다.
 자 이렇게 되어있을 때 여러분들이 봤을 때 어 여기가 더 스킨컬러라고 나타낸 났어요.
 그러니까 왜냐하면 여기가 지금 우리가 봐도 약간 사람의 피부.
 왜냐하면 이게 지금 좀 어둡게 영상이 촬영이 되었습니다.
 그래서 어둡게 영상이 촬영이 되어 있기 때문에
 이제 피부색에 해당하는 부분이 좀 어두운 스킨컬러 전으로 이렇게 나타나게 됐고요.
 그다음에 이제 좀 퍼플이라고 나온 진짜 스킨컬러가 이렇게 표현이 되어 있고
 그리고 이제 스킨컬러가 아닌 부분은 블랙으로 처리가 되어 있습니다.
 자 요결과 같은 경우에는 이 진화에서 결과를 낸 게 아니라
 4개의 컬러 레벨로 표현을 한 거죠. 옐로와 그린 퍼플 그리고 블랙 이렇게 표현을 했습니다.
 자 이렇게 하고 나서 지금 보면 우리 학생들이요.
 그러면 스킨컬러 여기를 얼굴이라고 하면 어떡하죠.
 이런 생각을 할 수가 있는데 이런 식으로 이제 얼굴이라는 것은
 어떤 한 영역을 나타냅니다. 색깔 톤, 균일할 톤을 가진 하나의 영역에 당하는데
 여기 지금 보라색으로 표현된 부분을 잘 보면 다 흩어져 있어요.
 그렇죠? 왜냐하면 여기에 이제 조명에 의해서 특정 점들이
 특정점은 스킨컬러처럼 보이고 그렇던 점은 또 스킨컬러가 아닌 것처럼 보이고
 그러니까 우리가 사람의 어떤 신체의 부위에 해당하는 것은
 동일한 색깔 톤을 가지는 어떤 덩어리가 됩니다. 그죠.
 그래서 이렇게 흩어져 있다 있는 경우 이렇게 이제 이 결과가 나왔을 때 우리가
 사람의 얼굴, 얼굴이라는 것에 특징을 스킨컬러를 가지고도 있지만
 서로 서로 연결이 된 깩 그리고 또 어떤 특징이 있죠.
 원의 가까운 그런 원인의 가까운 그런 위형 정보를 또 갖고 있고
 그 사이즈가 대충 어떤 크기 이상 되어야 하고 이런 특성들이 있습니다.
 그죠. 그래서 이거를 이용해서 업철이를 하게 되면 동일한 색깔 톤을 가지는 연결된
 그리고 원형태의 깊은 덩어리가 바로 얼굴이 되겠죠.
 자, 그러면 여기에 지금 뒷부분의 스킨컬러가 많다다라도 보단색으로 되어 있는 것,
 그리고 노란색으로 되어 있는 것, 그리고 그릴로 되어 있는 것,
 각각을 가 동일한 그리는 그린끼리, 보단풀한 보단풀길이 노란색을 옐로는 옐로끼리 이렇게 쭉 연결을 해 주게 돼요.
 연결을 해 주게 되면 지금 여러분이 보듯이 얼굴 연기건 굉장히 밀집도 있게
 노란색 옆에 노란색이 있고 노란색 옆에 또 이 노란색이 있고
 이웃을 연결하면 이 덩어리들이 다 연결이 되게 됩니다.
 반면에 퍼플로 된 부분은 이렇게 흐터져 있기 때문에
 연결을 요만한 연결하면 이런 덩어리 아주 작은 덩어리가 나오게 돼요.
 그래서 우리가 커넥티드컴포넌트 레블링을 별 거라고 제가 얘기를 했습니다.
 그래서 커넥티드컴포넌트 레블링을 통과를 시켜가지고
 어느 정도의 큰 덩어리, 지금 여기서는 가장 큰 덩어리가 얼굴일거라고 이제 정의를 했습니다.
 그렇게 되면 이런 작은 덩어리들은 다 노이즈처럼 그냥 이렇게 제거를 하면 되겠죠.
 그렇게 해서 최종적으로 남은 것이 바로 이 얼굴만 이렇게 남게 되는 것은 알 수가 있습니다.
 그래서 우리가 간단하게 컬러 정보로만을 이용을 해서도 이렇게 특징이 두드러진 객체는 추출을 할 수 있게 됩니다.
 그래서 칼라 속성을 이용하고 이것이 우리가 찾고자 하는 객체가 다진 어떤 속성들을 이용을 하면 잘 뽑아낼 수가 있게 됩니다.
 지금까지 칼라가 얼마나 중요한 속성인가에 대해서 얘기를 했습니다.
 그리고 이제부터는 칼라 이러한 중요한 속성을 가지는 칼라를 잘 처리를 해서 좀 더 입력 영상에서 가지는 문제점.
 물 해결하고 더 개선된 영상을 만들 수 있게 해주는 포인트 프로세싱 기법에 대해서 배우도록 하겠습니다.
 포인트 프로세싱 기법은 제가 여러분 얘기를 했지만 가장 간단한 형태의 영상 처리 기법이고요.
 그리고 이것은 각각의 위치 정보라든가 그니까 즉, 기약적인 정보 위치 정보이나 공간적인 어떤 쉐입 정보를 전혀 사용하지 않고 개별 점들에 대해서 독립적으로 이루어지게 됩니다.
 그래서 독립적으로 수행이 되게 됩니다.
 즉, 입력에 칼라가 fxcoma 와일 때 여기다가 특정함수, 트래스포메이션함수 t를 통과시켜서 나온 결과 이것이 이제 출력지 영상이 되게 됩니다.
 자, 우리가 이것으로 할 수 있는 일은 대표적인 기능이 컨트라스트 스트레칭이 있다고 했었고요.
 그리고 컴플레이션 압축을 할 수도 있고 그리고 이거를 가지고 여러 가지 특수율과 애니메이션 효과 이런 것들도 할 수 있습니다.
 다양한 효과를 할 수가 있게 돼요.
 그렇다면 이제 이러한 여러 가지 성능을 만들기 위해서는 t를 잘 결정을 해야 되겠죠.
 그래서 지금부터는 이 t암스로 어떤 것들이 올 수 있는지에 대해서 설명을 하도록 하겠습니다.
 그리고 이제 이 포인트 프로세싱을 택할 때는 포인트 프로세싱으로 내가 이런 효과를 가지고 간단하게 굉장히 빠르고 효율적으로 이런 개선을 할 수가 있지만 1등 것은 분명히 있다고 얘기를 했습니다.
 스페셜 인포메이션은 완전하게 잊어버리게 됩니다.
 그렇기 때문에 포인트 프로세싱 기법을 택할 때는 위급지기학 전균 정보나 쉐입 정보가 그렇게 이제 내가 신경을 쓰지 않아도 된다.
 그런 목적일 때 사용을 하는 것이 중요하고요. 사용을 해야 되고 나중에 이런 정보를 다시 사용을 하게 될 때는
 포인트 프로세싱 후에 이것들을 강화할 수 있는 그런 또 모주를 또 사용을 하는 면 결과가 더 좋아지게 됩니다.
 포인트 프로세싱에서 함수 t로 올 수 있는 것들은 여러 개가 있는데요.
 가장 기본적으로는 아리스메틱 앤 로즈 오프레이션을 사용을 할 수가 있습니다.
 t로 도악이 원래 이렇게 되는 거죠.
 그러면 우리가 아까 gx, y가 tfx, y가 된다고 했는데 우리가 산소를 연산으로 표현하게 되면 gx, y는 입력 fx, y에다가 도악이 뭐 50.
 제적인 칼락값으로 50씩 항상을 시키거나 또는 -50. 이렇게 특정은 가방큼 어둡게 만든다거나 이런 식으로 t가 정의가 되게 됩니다.
 그래서 어디션, 섭트로 액션, 멀티플리케이션, 데뷔 전, 앤브리징 이런 게 모두 아리스메틴 연산이 되게 됩니다.
 그리고 로즈인 연산으로 올 수 있는 것은 당연히 앤드 오하나 그리고 이들을 여러 개 사용한 것들 이런 것들을 이용을 할 수 있게 되겠죠.
 그다음에 이제 우리가 이렇게 산소를 연산으로 할 수 있고 t 자체가 어떤 이제 우리가 고등학교 때 주로 배웠던 펑시한 형태로 어떤 함수로 정의가 될 수가 있습니다.
 우리가 제고팜수, 스케어루트, 암스로 이런 것들이 있었죠. 그런 함수로 정의가 되고 그런 함수에서 가장 많이 사용되는 함수들이 내거티브 이미지를 만드는 역함수가 될 수 있고 그리고 로고 형태로 그 암수가 이렇게 생겼잖아요.
 또는 파워로, 트랜스포메이션, 스케어루트같이 여러가지, 이거에 뒤집어진 것 이런 걸 쓸 수 있고,
 스트레쉬 올딩, 그냥 이렇게 계단 함수 형태로 또 사용을 할 수 있고 등등에 다양한 티를 쓸 수 있는데 가장 많이 사용되는 대표적인 애들이 여기에 있습니다.
 그리고 마지막 또 케이스는 이 함수 티가 명확하게 이런 티는 지금 로테이션에서 보면 알겠지만 입력을 받아서 출력을 바로 디렉트로 계산을 해주죠.
 그래서 지금 이미지가 이렇게 좋아 있을 때 이 함수를 계기에 점의 값들이 이 함수를 통과시키면 바로 출력 값이 딱 만들어지는 경우입니다.
 근데 이제 어떤 경우에서는 이 함수를 하나의 포맷으로 포말하게 정의를 못하는 경우도 있습니다.
 그런 경우에는 우리가 로컵테이블이라는 걸로 표현을 하게 돼요.
 로컵테이블은 그냥 참조 이렇게 어떤 거냐면 1이라는 값이 드럼은 얼마로 바꿔고 2라는 가식 드럼은 얼마로 바꿔고 이렇게 사전 같은 거가 됩니다.
 그래서 함수 애플을 하나의 완벽하게 이렇게 포말하게 정의가 힘들 경우에는 로컵테이블을 만들어서 1인칼락 값을 가지러내는 얼마에서 어떤 임프시 들어오고 출력을 만들어야 될 때 임프시 칼락 값이 자기의 칼락 값이 있는 인덕스를 찾아가서 그 인덕스에 담겨 있는 값을 출력 값으로 결정을 하게 됩니다.
 이렇게 로컵테이블을 만들어서 사용하는 대표적인 이그젠플들이 히스토그랜 프로세싱이 있고요.
 히스토그랜 프로세싱에서 많이 사용되는 기법이 히스토그랜 리컬라이저이션, 히스토그랜 스페셜 피케이션이 있습니다.
 자 먼저 산수 연산, 아리스메틱 오돌레이션을 이용해서 어떤 효과를 얻을 수 있는지 보도록 하죠.
 자 우리가 아리스메틱 오돌레이션을 치한다고 하는 것은 함수티가 원래 입력 fx, y에다가 더하기 빼기 곱하기 나누기에서 특정 상수, alpha를 적용을 한다라고 여러분들이 생각을 하면 됩니다.
 이 alpha는 당연히 우리가 밝기 값이 fx, y가 그냥 그레이스크림 이미지라고 하면 제 그레 레벨을 정보마 있는 이미지라고 하게 된다면 이 alpha는 0에서 250 사이에 값을 치하게 되겠죠.
 그래서 더하기를 한다거나 더하기 alpha 빼기 alpha 곱하기 alpha 나누기 alpha 이런 식으로 적용이 되게 됩니다.
 자 이때 우리가 더하기 아 빼기를 한다는 것은 영상의 밝기를 일정한 alpha 상수만큼 밝게 한다거나 어둡게 하는 역할을 하게 되고요.
 곱하기하고 나누기 연산을 한다는 것은 영상을 명한 대비를 높이거나 낮추거나 할 수 있는 역할을 하게 됩니다.
 그런데 이렇게 인절리가 알스메팅 워플레이션을 치하게 되면 제가 0에서 250 사이에서 숫자가 올 수 있다고 했죠.
 그러면 당연히 이때 이 t암수를 치하게 되면 이 t암수를 우리가 더하기 alpha를 t암수로 치한다고 했어요.
 더하기 alpha를 t암수로 치하게 된다고 했을 때 t암수를 원래 fx, y에 치한다고 하는 것이 결국은 fx, y에다가 더하기, 빽이, 곱하기 나누기 어떤 alpha를 치하게 되는 거고
 그 결과는 바로 t가 되게 되겠죠. 우리 앞에 노테이션을 그대로 가지고 오면 이렇게 표현이 되게 됩니다.
 그렇기 때문에 alpha 수치가 아까 0에서 255 사이가 되게 되면 어떤 일이 발생할까요?
 원래 fx, y에다가 더하기 뭐 200을 했다. 그러면 원래 입력 영상의 밝기가 만약에 얘도 이제 fx, y도 0과254입니다. 그쵸? 0과254이다 보니까 우리가 사바이상 이미지라고 했을 때 120, 211 이렇게 했다고 합시다.
 그럴 때 우리가 일정하게 alpha를 만약에 100이라고 쓴다고 한다면 출력해서 이 원래 인품돼서 인품리미지에다가 이 alpha, plus alpha, 100을 이제 적용을 하게 되면 출력 값이 각각 어떻게 바뀌게 되죠?
 계산을 하게 되면 그 수치가 이거는 200이 되고 220, 330이 됩니다.
 그렇다 보니까 어떻게 되죠? 원래의 그 렌지, 밝기에 렌지를 넘어버리는 값이 발생하게 됩니다.
 또 유사하게 아까 봤던 이 원본 이미지에다가 우리가 minus alpha를 하게 된다고 하면 그 값은 alpha가 100이었으니까 그죠?
 이렇게 되겠으니까 0, 20, 배, minus 90 이렇게 되버려요. 그죠? 그래서 산술 연산을 하게 되면 이렇게 minus 값이 나온다든가 250으로 넘어가는 값이 나온다든가 이렇게 이제 그 렌지를 벗어나는 것이 값이 발생할 수 있기 때문에 반드시 후철이를 해줘야 됩니다.
 그래서 문제점은 산술 연산이 굉장히 심플하게 처리할 수 있는 연산이긴 한데 문제점은 음수 또는 화소가 가지는 최대값보다 큰 값이 출력할 수가 있어요.
 그래서 이거를 해 주는 방법은 내 심플합니다. 그냥 잘라냅니다. 알겠죠? 그래서 음수는 무시하고 무조건요.
 그리고 굉장히 큰 수치, 300이라는 수치가 나와도 그냥 맥스였던 250로를 결정을 하게 됩니다.
 그래서 어떤 값이 나오던 0과 2호 원래 칼라의 미니몸과 맥시몸을 초과하지 않도록 이렇게 후철이를 해주게 됩니다.
 이렇게 아까 앞에서 우리가 산술 연산을 했을 때 산술 연산의 효과가 더하기 빼기는 밝기를 밝게 밝기 자체에 세기를 나타나게 한다고 했고
 코팎이 나누기는 대비의 영향을 준다고 했습니다.
 실제 그런지 영상을 가지고 보도록 합시다.
 자 지금 아래에 채로 왼쪽에 원래 인픈 영상이 있어요.
 원래 인픈 이미지가 있고 이 인픈 이미지에 대한 희스토그램이 지금 현재는 밝기 희스토그램만 표현을 한 겁니다.
 입력 영상은 칼라 이미지인데 우리가 원래는 이제 HSI 채널을 다 찍던가 RGB 채널에 다 보긴 하는데
 우리가 영상 처리를 할 때 색조가 필요 없이 밝기만 가지고 처리하는 경우가 굉장히 많이 있거든요.
 그렇 경우에는 우리가 얘기를 했듯이 RGB에서부터 인템스팀 이미지를 뽑아내서
 인템스팀 이미지는 이 RGB의 평균값으로 뽑아낼 수 있다고 얘기를 했었죠.
 그래서 인템스팀 값을 뽑아서 인템스팀에 대한 히스토그램을 그린게 지금 오른쪽 아래에 그래프입니다.
 자 여러분들이 이 그래프를 보면서 어떤 생각을 할 수 있을까요?
 어떤 생각이 들까요?
 일단은 그냥 바로 되는 생각을 좀 밝은 색톤은 없어요.
 밝은 색톤은 없고 색구간을 대충 이렇게 4계로 나눴었다고 했을 때 좀 어두운 톤이 많이 사용됐다는 생각이 들 겁니다.
 그래서 여러분들이 하나 이거 좀 더 밝게 하고 싶어.
 그렇다면 여기에다가 더스템 연산을 적용을 하면 되고 난 좀 더 어두워도 괜찮을 것 같아.
 그래서 우리가 민아스 80을 했다고 하는 것은 어떻게 생각하면 되냐면 이 히스토그램을 왼쪽으로 80만큼 슈프트를 했다고 생각을 하면 돼요.
 왜냐하면 모든 값들이 80만큼 낮아지기 때문에 왼쪽으로 슈프트를 하게 돼요.
 그러면 80이 이렇게 들어가게 되면 자 그래프가 이렇게 되는 거죠.
 원래 이 그래프가 이렇게 해서 이렇게 이렇게 이렇게 생겼는데 80을 왼쪽으로 슈프트 하게 되면 한 이 정도가 80이라고 과정을 하면
 여기까지가 그냥 다 까만 색이에요. 그죠. 까만 색이고 이 분포가 슈프트가 되니까 나머지 까만 색을 이렇게 밝기 톤이 또 이만큼.
 아까는 이 기만 사용하지 않았는데 이만큼의 밝기를 사용하지 않는 그런 히스토그램으로 변화하게 됩니다.
 그러니까 영상이 많이 어둡죠. 그죠. 지금 결과에서 볼 수 있듯이.
 그리고 반면에 여러분들이 더하게 80을 했다는 것은 원래의 히스토그램을 그쵸.
 오른쪽으로 슈프트 했다고 생각을 하면 됩니다.
 아까 우리가 여기를 4등분에서 이렇게 봤었으니까 여기 자표가 0이라고 한다면 여기가 62.
 그리고 여기가 120. 그죠. 여기가 180. 여기가 250. 이렇게 될 겁니다. 그죠.
 근데 지금 대충 370. 이후로는 색깔이 사용되지 않았다고 봐야 되는데 이제 이게 80을 다 하게 되면 이만큼 중 밀리게 되죠.
 그래서 히스토그램이 250. 고강까지 굉장히 많이 사용이 되고 그죠.
 사용이 됐으니까 요렇게. 다 요렇게 모양을 가지고 오다가.
 여기는 아까 이만큼 사용이 됐고 여기 나머지 여기 픽셀 개수들이 있죠. 그죠.
 여기 그래프 아까 그리다가 슬라이드가 넘어가 버려서 다시 그리면.
 그러니까 지금 플러스를 하게 되면 아까 여기가 170 정도 된다고 했잖아요. 그죠.
 그러니까 250까지. 여기 또 다른 요렇게 사실상 점이 아예 없는 게 아닙니다. 그죠.
 좀 있었는데 얘들은 80을 다 하면 전부 다 맥스인 250으로 다 물리게 돼요. 그죠.
 그럼 250을 다 합치만큼 250을 해당하는 픽셀들의 높이가 나오게 되겠죠.
 그리고 이만큼은 그대로 그려지는 겁니다. 80만큼 슈프트를 한 채로.
 그리고 여기 구간에서 되니까 여기가 아까 0에서 꽤 많은 어두운 색을 가지는 애들께 많았었습니다.
 그죠. 얘네들이 이제 대상 0이 아니라 80이라는 수치에서부터 이렇게 나오는 거예요.
 그죠. 이렇게 나와서 이런 식으로 해서.
 헬스터그램이 이렇게 요렇게 마무리가 되게 됩니다. 그죠.
 그리고 여기는 다 밝아졌으니까 요 색깔 톤을 가지는 픽셀은 업게 되겠죠. 그죠.
 그래서 아까 요기에 좀 깔려서 보이지 않던 이 푸른 색들이 요기 마지막에 250. 그죠.
 다 클랜핑을 하게 되면 맥스에 해당하게 되니까 넘어가게 돼서 이런 분푸를 가지게 돼요.
 그니까 즉, 그냥 전체 영상이 밝아지게 된 겁니다. 그죠. 그래서 플러스를 하거나 마이너스 연사를 하게 되면 영상 정체가 왼쪽으로 슈프트가 되거나 헬스터그램이 오른쪽으로 슈프트가 되거나 하는 결과를 얻게 됩니다.
 자 그러면 곱하게 하고 나누기는 어떻게 되느냐 곱하게 하고 나누기는 자 여기 헬스터그램에서 우리가 나누기를 했다고 하게 되면 한번 생각을 해봅시다. 그죠.
 자 100이라는 숫자에다가 1.5 숫자가 숫자가 소스점이니까 2라고 할게요. 그죠. 2를 나누면 52 되요. 그죠.
 자 그럼 51라는 숫자를 2를 나누면 25가 됩니다. 그죠.
 자 여기가 이제 100이 되고 그리고 11라는 숫자에 2를 나누면 5가 됩니다. 그죠.
 그래서 원래는 10이고 50이고 100이고 150, 200 이렇게 인프세서의 칼라가 있었는데 여기다가 나누기 1하는 숫자를 하게 되면 5 그리고 25 그죠. 그 다음에 55, 75, 100이 돼요. 그죠.
 이렇게 되면 어떤 게 일어냈냐면 우리가 원래 데뷔라는 얘기를 했었어요. 그죠. 데뷔라고 하는 것은 컨트라스트라고 하는 것은 주변과 나와의 색깔의 차이를 우리가 이제 차이가 크면 데뷔가 크다 아니면 데뷔가 작다라고 얘기를 하게 됩니다.
 자 그래서 요 두 개 색깔의 차이를 보게 되면 차이가 원래는 40이고 50이고 또 50이고 50이고 이렇게 차이가 일어났는데 지금 보면은 차이가 줄어들었죠.
 22이고 25가 되고 또 25가 되고 25가 되었어요. 그죠. 그래서 지금 원래 10에서 200까지라는 숫지에 변하는 여기서부터 미니망 3개서부터 맥시만까지 3개 차이가 총 190였어요. 그죠.
 근데 나누기 일을 하고 나니까 이 차이가 95밖에 나지 않습니다. 그죠. 여기까지 데뷔를 아까 우리가 데뷔의 정의를 얘기했는데 데뷔를 낮춰주는 효과가 발생하게 됩니다.
 그래서 데뷔가 낮춰지게 되면 어떻게 되느냐 윤곽선이 선명하게 드러나지 않아요. 오래 약해지게 되죠. 그래서 이 영상에서 이렇게 남은 리피 이렇게 윤곽선이 이렇게 선명했는데 여기서 보면 이 부분이 이제 선명히 지지 않고 있습니다.
 자, 그럼 반면에 곱하기는 어떤 효과가 있느냐 곱하기는 원래 오리지날 숫자에다가 가까, 그죠. 20 반대로 곱했다고 한다면은 어떻게 돼요. 여기가 22 되고 100이 되고 200이 되고 300이 되니까 그냥 255이라고 나오겠죠.
 그렇게 되면은 여기가 물론 아예 밝아진 부분에서는 재를 한다고 할 때 이 3개의 숫자 간의 차이가 180이나 되었어요.
 원래는 여기가 차이가 90밖에 되지 않았는데 차이가 이만큼 커졌죠. 그래서 우리가 이제 데뷔를 곱하기에 하게 되면은 데뷔가 커지게 됩니다.
 그런데 이제 원래 굉장히 3개 톤이 밝았는데 거기에다가 색깔 차이가 이제 영상에서 색깔 차이가 이렇게까지 히스토그램이 이런 식으로 생겼다고 합니다.
 이런 식으로 생겼으면 사실상 아주 어둡거나 아주 밝거나 하는 부분이 많았던 거여서 곱하기는 하게 되면 이 부분이 정보는 단 날라가게 되긴 해요. 아주 밝았던 부분.
 이렇게 어두웠던 부분들은 좀 더 선명하게 나타나게 되긴 합니다. 그래서 이제 우리가 간단한 곱하기 연산을 하게 되었다고 하더라도 지금 오리지날 이미지랑 이제 출력 이미지랑 비교를 해보면 윤곽산 정보가 훨씬 더 이렇게 이 부분에서는 선명하게 나타난 걸 알 수 있어요.
 그렇지만 방금 말했듯이 밝았던, 원래 밝았던 부분도 너무 밝아지기 때문에 밝은 쪽의 영상에서는 무조건 다 좋아지는 건 아니고 밝았던 부분에서는 다 같이 또 밝아지는 효과가 강하기 때문에 차이가 발생하지 않을 수도 있습니다.
 그렇지만 전반적으로 영상에 데뷔를 올려주는 역할을 하게 됩니다.
까지 이 영상처럼 밝은 부분의 영상이 정보가 잘 사용되지 않았을 경우에는 곱하기 를 했을 때 데뷔를 충분히 잘 개선할 수가 있어요.
 그런데 밝은 부분이 많이 사용됐을 때는 또 역시 밝은 부분이 전체적으로 다 맥스 값을 가지게 되면 곱 부분에 대한 정보가 좀 떨어지게 되겠죠.
 그래서 우리가 나누기하고 곱하기 를 가지고 굉장히 좋은 데뷔를 개선시키는 효과는 얻을 수는 없지만 그래도 영상에 따라서 어떤 영상에 종류에 따라서는 곱하기하고 나누기만으로도 영상을 선명하게 만드는 효과를 얻을 수가 있습니다.
 제가 지금 histogram를 보고 설명을 하는데요.
 우리 학생들이 포인트 프로세싱을 다 배우고 나서 나중에 영상에 밝기 histogram만 보여줘도 이 영상에는 어떤 문제가 있어.
 그래서 우리가 수업시간에 배운 T 함수들 중에 어떤 걸 적용하면 개선이 될 것 같아.
 라고 이런 걸 바로 분석할 수 있습니다.
 여러분이 그런 분석을 할 수 있다면 수업을 굉장히 잘 이해한 거거든요.
 그래서 우리가 이제 칼라의 정보를 histogram이 다 가지고 있다고 했었잖아요.
 그래서 이 포인트 프로세싱 이 챕터에서는 영상을 볼 때 영상 자체보다는 이 histogram를 가지고 분석을 하고 이 histogram을 어떻게 개선할 것인가 그거를 좀 중점을 해서 설명을 하도록 하겠습니다.
 산술연산을 통해서 어떤 효과가 있을 수 있는지 몇 가지 이그젠플 이미지를 더 보도록 할게요.
 예제 영상을 더 보도록 하겠습니다.
 이 영상에서는 지금 입력 영상이 이렇게 생겼는데 여기에다가 +50 또는 -60.
 곱하기 1.5, 곱하기 나누기 1.5를 했을 때 어떤 결과가 일어나는지 봅시다.
 자 50을 더 했을 때 전체적으로 밝아줬고 60을 뺐을 때 전체적으로 어두워졌습니다.
 그죠?
 그 다음에 이제 곱하기 를 했을 때는 밝아져서 이제 이런 얼굴 안 부분에서는 데뷔가 굉장히 잘 나타났어요.
 근데 여기 지금 밝아지는 부분이 있죠? 이렇게 밝은 부분.
 밝은 부분에서는 제가 앞에 histogram을 보고 얘기를 했지만 밝은 부분의 색깔들이 전부 다 255 이상을 넘어가 버리면
 같은 색으로 결정이 나버리잖아요, 그죠?
 그래서 밝은 색이 있었던 부분에서는 오히려 이렇게 데뷔가 떨어지는 걸 알 수가 있죠.
 그래서 이 영상 같은 경우에는 우리가 앞에서 봤던 영상과 달리 올래 임프, 이미지가 0~250%라고 할 때
 이 곱안에도 많은 이런 histogram을 올래 픽셀 분포를 갖고 있었어요.
 그러다 보니까 이만큼 곱하기를 취하게 됐을 때 밝은 색 두 분들이 전부 다 이 정도의 밝기 부분들이 다 2호으로 가게 되면서 얘네들 간의 데뷔가 오히려 없어지게 된 거죠.
 자 그리고 나누기를 하게 되면 나누기 같은 경우에는 전체적으로 데뷔가 다 떨어졌어요.
 이렇게 경계 부분에 잘 표가 안 나게 되는 걸로 이제 나타나게 됩니다.
 손 부분 또 굉장히 표가 되는 그 마디마디 전부가 잘 안 살아나게 되죠.
 자 그래서 의도적으로 우리가 데뷔를 낮출 수도 있고요.
 그런데 이제 우리가 인식을 한다면 데뷔를 올려야 되는데 방금 봤듯이 앞에 영상에서는 곱하기를 통해서 데뷔가 잘 개선이 됐어요.
 그런데 지금 영상에서는 이렇게 데뷔가 좋지 않게 되네. 그런 부분도 있다 라는 것을 지금 보여주고 있습니다.
 자 그다음에 이제 또 비슷한 이런 영상들을 보면 원래 영상이 이렇게 생겼어요.
 자 이게 기본적으로 밝은 톤이 많이 들어간 영상이었습니다.
 그리고 이 인프를 이미지가 있고요.
 그다음에 여기도 인제 인프를 이미지가 있는데 앞에 영상은 좀 밝은 색의 분포가 많은 영상이고
 이 영상 같은 경우에는 이 안에 좀 중간색 톤이 많고 여기도 좀 밝은 색톤이 좀 있긴 합니다.
 자 이렇게 되었을 때 우리가 더하기 연산을 해서 했더니 올레보다 전체적으로 색이 다 밝아졌어요.
 그죠? 빼기를 했더니 전체적으로 색깔이 어두워졌고 곱하기를 했더니 어떻게 됐어요?
 이제 흰색 톤이 원래 밝은 톤이 많았는데 곱하기를 하면서 개네들이 다 밝아지니까 데뷔를 조절하는데 데뷔가 훨씬 더 나빠져 버렸죠.
 그죠? 반면에 나누기를 했더니 윤곽선이 좀 더 선명해지기도 했습니다. 그죠?
 자 그래서 우리가 보통은 곱하기가 데뷔를 올려주고 나누기가 데뷔를 낮춰준다 이런 말을 많이 하는데
 이것은 어디까지나 입력에 이제 디펜 던탈 수 밖에 없습니다. 입력에 영향을 받을 수 밖에 없기 때문에
 대부분의 경우에는 곱하기가 좀 더 개선을 해줄 수가 있지만 밝은 색톤이 많은 영상에서는 오히려 데뷔를 떨어질 수가 있는 거죠.
 자 그래서 곱하기하고 나누기가 데뷔를 조정해 준다 라고 이제 하는게 영상에 따라서 그리고 이제 곱하기를 쓸지 나눌을 쓸지 결정을 하면 되겠죠.
 자 그 다음에 이 영상 같은 경우에 아래 영상 같은 경우에는 좀 어둡게 촬영이 된 영상이에요.
 기본적으로 그래서 플러스를 했을 때는 영상이 좀 더 이렇게 전체적으로 좀 밝아져서 잘 보이고
 어둡게 했더니 이 어두운 부분에 전체적으로 다 같이 어둠 색을 가지면서 잘 안 보이게 됐죠.
 자 그 다음에 여기서 곱하기를 하게 되는데 우리가 곱하기를 하게 됐을 때 이 곱하기 이 정도로 하게 되면
 이 부분은 굉장히 선명해졌지만 역시 이 부분에서는 또 밝은, 원래 밝은 톤이 존재했던 부분에는 이 데뷔가 또 떨어지게 되죠.
 또 마찬가지로 여기에 나누기를 했을 때 밝은 좀 중간색 이런 애들은 이제 그래도 데뷔가 완전히 사라지진 않았는데 여기 좀 어두웠던 부분은 데뷔가 상당히 사라지게 되었습니다.
 자 그래서 산술연산을 가지고 우리가 밝기값을 조절을 함으로써 간단하게 데뷔를 조정할 수 있지만 우리가 데뷔를 개선하기 위해서
 지금 보이듯이 곱하기하고 나누기를 너무 실례가 믿어서 많이 쓰면 안 되겠다. 그런 결과를 볼 수 있습니다.
 그래서 지금 우리가 산술연산에서 만나는 것은 간단한 산술연산만으로도 우리가 특정 히스톡올에 따라서 히스톡올에 분포를 보고 산술연산 가지고 원하는 효과를 얻어서 영상을 개선할 수도 있다 라는 것입니다.
 그러니까 주된 오프레이터로 쓰는 건 아니죠. 우리가 뒤에 가면 좀 더 훨씬 더 좋은 오프레이터들이 있기 때문에 그런 오프레이터들을 사용을 할 겁니다.
 자 그 다음에 로직 오프레이션 들은 이제 논리 연산을 사용을 하는 겁니다.
 여러분들이 전산 수학을 들었어요. 1학년 등 들었는지 잘 모르겠는데 그리고 컴퓨터하고 좀 더 들었고 그러니까 논리 연산제를 많이 받다고 생각을 합니다.
 그래서 대표적인 로직 연산이 엔드, 오와, 나, 그리고 익스클러스, 오와 이런 애들이 있습니다. 그래서 실제로 우리가 이걸 적용을 하는 건데
 아무래도 로직 오프레이션은 바이나리 비트 단위로 적용을 하는 거죠. 그럼 우리 학생들이 어떻게 비트 단위로 적용을 하죠 라고 생각을 할 것 같습니다.
 일단 기본적으로 그레이스크에서 사용을 할 거고요. 그리고 우리가 이미지가 그레이스크는 영에서 이호까지의 밝기 정보를 가지고 있습니다.
 그리고 또 이제 우리가 칼라 이미지라고 해서 칼라 이미지는 이런 밝기 채널만 있는 게 아니라 여러 가지 멀티 채널을 가지고 있죠.
 그리고 이제 우리가 그 다음에 이제 주로 얘기를 하는 게 이제 바이너리 이미지라고 얘기를 합니다.
 바이너리 이미지는 맑에 대해 두 개 영안이면 1. 이 밝기간만 가지고 있는 이미지를 바이너리 이미지라고 합니다.
 자 그렇다면 우리가 칼 영상에다가 로직 오프레이션을 치한다 이게 무슨 말이냐면
 자 바이너리 이미지에서는 영하고 1. 이니까 바로 로직 오프레이션을 치할 수 있겠죠. 그죠. 그래서
 트류, 일단 여기에서 예를 들어서 트류를 일로 보고 폴스를 영어로 보면 대기적이죠.
 그래서 이제 엔디를 한다 엔디를 한다는 것은 둘 다 1이면 1. 둘 중에 하나라도 영의 값을 가지면
 영 반대로 오와 오프레이터 같은 경우에는 흔대가 되겠죠. 그죠. 그래서 둘 중에 하나가 1이어도 1의 값을 출력을 하고 영이 되면 영이 출력이 됩니다.
 여기서 1에 해당하는 게 이제 가장 극단적이라 생각하면 1에 해당하는 게 제일 밝은 255. 0에 해당하는 게 0도 0이 되겠죠.
 그래서 1에 해당하는 걸 흰색. 또는 이제 0에 당하는 걸 검은색.
 근데 또 경호에 따라서는 반대로 어떤 사람이 이걸 검은색 이걸 흰색 이렇게 쓰기도 합니다.
 그래서 영상에 컬러 값이 바이너리다라고 이제 보면 되고요. 마찬가지로 이 스크러쉬 보와와 나스라면 되겠죠. 나스 사실은 그러니까 이미지를 반전시키는 효과를 하게 되겠죠.
 자 그렇다면 이거 밝기에는 어떻게 로즈고 포레이션이니까 바이너리 이미지에서는 이렇게 치하면 되요.
 그러면 그레이 스케일에서는 어떻게 치할까. 그레이 스케일에서는 영에서 이호까지 이렇게 밝기값이 밝기값의 정보가 실수값을 가지잖아요.
 그리고 칼라이선은 밝기의 정보가 3차원 100타로 표현이 됩니다. 그럼 어떻게 할 거냐. 어떻게 하면 될까 여러분 한번 생각해 보세요.
 쉽게 생각하면 돼요. 누군가 생각을 했을 것 같애요. 결국은 우리가 영에서 이호다라는 것을 8비트로 표현을 합니다.
 컵퓨터에서 그죠. 그래서 250원은 하나, 둘, 셋, 넷 다 써요. 이렇게 된 게 250원이고 영은 이게 다 영으로 채워진 게 영이 됩니다.
 그죠. 즉 이런 밝기값을 비트로 변화를 해서 비트 단이대로 어떤 그 이미지 두 개를 엔드채라 오아치라이라고 하면 픽셀들이 이미지의 두 개가 있어요. 그죠.
 그럼 대응하는 픽셀들끼리 칼라들을 이렇게 비트로 한 다음에 그 비트를 서로수로 엔드 여기에 두 개 간에 엔드, 엔드채에서 나온 결과 값을 채정축역 값으로 해서 결과를 도출하면 됩니다.
 자 그렇다면 그레이 스케일을 할 줄 안다면 칼라도 할 수 있게 쪄고 저 멀티 채널이니까 rgb 또는 hs로 가지고 있을 때 각각의 r과 지압이도 이런 식으로 표현이 가능하겠죠.
 그러면 나왔던 결과를 각각의 채나별로 반령해서 r다시, 지다시, 비다시 이렇게 해서 결과를 만들어내면 됩니다.
 루즈고프레이션 어떻게 채우는지 알겠죠.
 근데 이제 대부분의 경우에는 바이너리 이미지를 가지고 많이 처리를 하게 됩니다.
 자 지금 이제 바이너리 이미지가 보이고 있습니다.
 자 여기서 바이너리 이미지가 있는데 지금 이미지 1은 이렇게 상각형이 되어 있고 이미지 2는 이렇게 타원이 이렇게 있어요.
 이 브레이션은 여러분들이 검은색에 해당하는 게 1이라고 보면 됐고요.
 배경에 해당되는 게 0. 검은색에 해당하는 게 1. 이게 0이 됩니다.
 일반적으로는 우리가 이제 검은색은 밝기가 어두니까 0.
 흰색은 1이라고 하는데 우리가 이제 실제 영상 처리를 많이 하다 보면 이거를 어떻게 표현을 하냐면 검은색은 백그라운드로 많이 표결을 합니다.
 우리가 영상에서 중요하게 생각하지 않는 배경으로 근데 흰색은 의미가 있기 때문에 이거는 우리가 포그라운드라고 얘기하는데
 그러니까 물체의 배경이 있고 앞에 있는 거는 멀냐, 정경은 뭐냐 이 정경이 대부분 물체가 되게 되겠죠.
 오브젝트에 많이 대응을 하게 됩니다.
 그래서 우리가 바이너리 이미지를 할 때 0에 해당하는 걸 백그라운드 1에 해당하는 걸 포그라운드라고 봐요.
 그래서 지금 우리 이 그 잼프의 이미지에서는 이런 도영에 해당하는 게 그죠? 포그라운드에 해당하죠.
 그래서 이거를 우리 학생들이 잘 볼 수 있게 이렇게 색깔을 반전을 한 겁니다.
 그래서 여러분은 지금 여기에서는 검은색에 해당하는 게 1. 그렇지 하는 걸 0 이렇게 표현을 하면 보면 됩니다.
 자 그래서 먼저 낫 오프 레이터를 로즈 오프레트를 채하게 되면 색깔이 다 반전이 되겠죠. 그죠. 색깔이 반전이 되게 됩니다.
 그다음에 이 두 개를 엔트를 채하게 되면 엔트는 둘 다 1인 부분만 1로 출력을 한다고 했어요. 그죠?
 그러니까 즉 이 이 그 잼프레에서는 둘 다 검은색에 대응하는 부분.
 그러니까 이 참각형의 끝과 타원이 만나는 그 부분만 이렇게만 일로 나타나고 나머지는 0이 되게 됩니다.
 5와연사는 반대가 되게 되겠죠.
 즉 각각의 도영에 포함되어 있는 모든 픽셀들.
 그러니까 이미지원에서 도영에 포함되었거나 이미지2에서 도영에 포함된 아이들이 다 1의 값으로 원래 가지게 됩니다.
 그죠? 둘 중에 하나에서만 1이어도 1로 표현이 되니까 여러분 결과물을 얻게 됩니다.
 이 스크러쉬 5와연 둘 다 같은 색깔을 가졌던 부분은 다 0이 되고
 그렇지 않은 부분만 1이 되게 되요. 그죠? 그러니까 지금 아까 배경 서로 서로 일치하는 배경이나 서로 서로 일지했던 오브젝트 부분은 이렇게 0으로 가지고
 그렇지 않았던 부분만 1로 마킹을 하게 됩니다. 알겠죠?
 자 이렇게 해서 여러분들이 로즈고폴레이터를 치할 수 있어요.
 그럼 이 로즈고폴레이터는 어디 쓰지 라고 생각을 할 수가 있는데
 이 로즈고폴레이터를 잘 엔드 5와 어폴레이터를 잘 이용을 하면 영상을 편집을 할 수 있게 됩니다.
 어떻게 영상을 편집할 수 있느냐 그 음룡 부분을 우리가 프레임 프로세싱에 가서 제가 설명을 하도록 할게요.
 그래서 프레임 프로세싱에 가면은 여러분들 사진 찍고 나면 인물만 빼고 나머지 이렇게 우리가 그 특수 효과 촬영할 때 배경을 파랗게 해서 그냥 찍지 않아요.
 그렇게 찍은 것처럼 해서 여러분들이 이걸 딱 떼도 내고 나서 이 배경만 내가 실제로 신뢰해서 찍었는데
 꽃파티서 찍었던 것처럼 이렇게 그 특수 효과에서 붙이잖아요. 그죠?
 그런 역할을 이 엔드 5와 연산을 잘 이용을 하면 얻을 수가 있게 됩니다.
 그래서 그런 영화에서 사용되는 그런 특수 효과를 간단한 엔드 5와 연산만으로도 만들 수 있거든요.
 그 부분은 우리가 이미지 전체를 가지고 하는 연산이기 때문에 프레임 프로세싱에서 다룰 겁니다.
 간단하게는 마우스의 위치를 찾을 때 이 엔드 5와 연산을 로즈고 연산을 사용을 할 수가 있습니다.
 자 기본적으로 어떻게 사용을 하는지 이제 얘기를 했습니다. 그죠?
 우리 좀 자세한 엉룡은 프레임 프로세싱에 가서 하도록 하겠습니다.
